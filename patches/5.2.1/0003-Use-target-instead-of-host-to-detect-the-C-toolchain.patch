From 204dd050b9d50013eeb4137dc84e7cb678a7315a Mon Sep 17 00:00:00 2001
From: Samuel Hym <samuel@tarides.com>
Date: Thu, 22 Feb 2024 13:37:28 +0100
Subject: [PATCH 03/14] Use `target` instead of `host` to detect the C
 toolchain

When building a cross-compiler, the runtime will run on the target, not
the host so:
- set `cross_compiling` by comparing `build` to `target` (rather than to
  `host`), as this variable will be used later
- use `target` to set up the tool prefix,
- as the libtool configuration will configure a `build` to `host`
  toolchain, temporarily assign `host*` values to `target*` values
---
 configure    | Bin 682393 -> 682949 bytes
 configure.ac |  18 ++++++++++++++++++
 2 files changed, 18 insertions(+)

diff --git a/configure b/configure
index 9f16ca87352a88b5e995631c15fd8914f6b2ebfc..f81f4ca213b710395b61b64d1380318d4d80867d 100755
GIT binary patch
delta 1998
zcmZ`(drVbz9N+yt?u9D~^12Qaj&QXR!UV#QN5pXGe6e(h`QUQ6_W&nu=Unc&0<{Wr
zD<>GO8vK+s2i9!ONBq(FHF{hNafq|VoH5JU!?YZcjAl&@>UX)nUodan?QEa>`F_s#
z{XIu7rw)#$?*GVC)z(thsCd1qOOc#j-7p+Z{W*{7R<&A5)?AY8bog}L?eKV&8nsz!
zl)b84?N$uQP&KC_`RWv@L<%UJb+W2Ss$or$_8E$caZ;_KDPGyfRI;~L@kvgd1!<~N
zG^u)@>UPb9kerEusLU3Ks(7txjpS1dpVXXepHY#uX0tt(X$v*os<;hBvde};(>>O=
zdymC~8kGz+TUI=jXQ4e9(jmK5*+{q6sB}-8>Ch7ioYsxGab`&J;7ijZcm~ph0aI~I
z5R;zYOxrmuo&>9j|1VP}X|$OmN!hr`N;5`Hp1Ap?(RA&&X)65x1(f-^xhyQ0)1w(=
zxdl8<ug3vU8r0JpyFq&d$G$pHvUnapPrU#VdG18+1nar%WG86gZzmDp!<=S#HyJ(?
zzK~A81F|4zS7)P4>gomu7I0!t;ZJwKOzJrW(hzrdtQTD3?x@xW)&S1G|1oF}<2d&V
z0MXK5amo3CP0_59<dg#w47PdOAXv`Jd$`T??-B5ciF@k54Ag}|9HKk*BPfUpu~9av
zQEMpOFa;Fh_3AW;5%|tOpqJ-Oj)%ehJn)KecrA@%lmpX*JZla7fVYWWFNRBa`GnzI
znz;_%7Cl(D1t!gx`QR?7i{|^^gNdZVk7LPM4J;wuJs^XASP8R3OCW(Ir1dK7n9p{|
z2g^cjG_wVEhSG$MHiwqC!goV$l-cSddHF2EAyIzo33!yB2VL0@WBGd1!U0&G!kgZ4
z3vS@>hg<Ljhj~Tl8B$?JHgb9bMv!~=-~t-;D_ko2@aA1uL3W--akOg;-ska1`=8K8
z&y2$wzJA0u2{+C<-$Tz%!mq>(n2Y;C8)fgU;wM8tvmlQcC0q52Vq>Rs&=oWH^-Tei
z`Kx(_XiAjJlFp9jyr&%H3jX8{)RMsY^aj)_T=pC2JFx&qUPN8uP;w5SB5^=Xub~m4
z+4KhLS|s8Yp(#LbcB9|LJ!^jSSl{QUUPNX8RSQ>tdmi<O*1bH8HU(+Ipq)+(qdZAu
zH--vCcJ6U>L-^Wu2knhm89Y%(qoTQV@9d>Y>^JvXM;@S`#FF%xv6}}Qi^R#~c?*uD
zJ1qDuQ4?c-;Zewy#rQ5y<Wls1G^MdPTqHFRk6(%An)RtTofk!$R^f6!9r|?^w((n{
zw~O$E&|E9Q#lnwNid_O9+<>3tm<(;iJEM4=x*@sTt_(vb-*3Sw#J&~(LDy}@uZwgq
zmf<Agf0h*lw&L@mRg4`H5j(fzbAsPnj(4T-%=?@1kQnf*FX6mJF|#4nz{jsz(G603
z7{}6|+i+Dj?;!j5*l496mx}d{tg^<DPY3W-?)S(!+|6wV^DkibnAu}tPZ-U=5MJ5+
EFU!5?HUIzs

delta 1507
zcmZuxe@s<%6yN=x^M&{B<N17mL|VPOr^~$_VH+Zdi6et$Wm?+{5|jjALO7ptL0E1;
zOIA*^<p$s0n>ARQznZR9_EoeIZ=!5!znGe4&ZHKV1x};-!_~d#i~n4@+jl$nbAEl!
z`JVF~ycmiPhdMsdUfdzOcWRvl`E@a~sXAur^)DGsQM1Wt4bGW_g2rMa*xFLRab2v%
z4C+mF(TzrtZWxwYK7Udx$q?Tswdvw&C6w7xo@n?(OBeV4qXlH-TW$Lchgw={pY8z3
zM_N9^_k$hxW)@pmM$)|1Y*!jd$$GZb@9>kmx3UNBLz}7iY7Z+#o3zm0VVi9iG5#*A
z6uEI`h=%vrEa{E2t4OgdMFL2AtCxN3aYp^}5X&LMPd{SkIN5z8*#btAw~y^|k<^o9
zfF3(}aFJp6Ma-+wv*gezc2Al!<c48(TqCcX^Q_+MR0l`cqtl(>Z@1V!XQyP~UzV?l
z!W!Lsq!!#N<Yo;%Bue5z9Xcq>2Rd8{i_x`uhTO9NW+}T91#rMa>X(;7HkBhRsj#~Y
zQsiJMjHtQ}Jp+L$3}2{%7*Jk$u^M`(@Zt^7H3giz1y(q~`4V4+r~}NC6FXr46fi7c
zkxztwb@{}lYDkyc_rgI{N#TBoXHX><jzgxKq_L9_nQdG9MfoTc*_h}ag}q{Dm*$bn
zet`s#R!-c23Z~G?F=$4W;fGsLeAlN+cHD+9m<nc@FB1p<g7=lns=r~5pAx?2#!X>r
ziHP^IxiXZG3FRX%6yWI;758v4M#$W?1n+1RLs(><6$O{kC$9Blnrth<{uyNRSUDD|
z3fn8NeI`YaJ`>y2?CoyG@6;VNwqZg|rhgkQQBxgx1HV?<@Y|S}_P?o$d$1)ysrve{
zi&6<odPrOwzznf?6m#}{Hh`&QksQKa+7eNB7M~*M=viE2P+Mf^cg$6+s>X0ck$(Ip
zu1*Wu8&SO_YCRZ@lZ#<J7xq`X){GkViptY>@Vc&Achtpe)Lez!{FqCDmY6Nw>3mT0
zQM8z8Y*?3T#)7(7*~w>$M;f_LxH9?Y#Ohoo|5*_@mc`wZS8zU?o9U!p9_A0LZEw%z
z5p^x{r}^CDCH0>re4Hl3CnrjIK2v0hp5UugdGRNCvD%d@PxA_LS-6}ZR>~VI_-)li
zOA1JQjvtuZk`oc$rxsOqmh+Xf$?@_le2C`FFORhIoM|f8_?x^nPZhpZ1FzgRz{}A7
u&lW!p@=K}(wVRsnJ~JiB)J%E(6z`yWe|`NKZk-hCq*})%*Pn5(>G=<2b2Q8V

diff --git a/configure.ac b/configure.ac
index 2e3a11f60c..0862b381ff 100644
--- a/configure.ac
+++ b/configure.ac
@@ -288,6 +288,14 @@ AC_CANONICAL_BUILD
 AC_CANONICAL_HOST
 AC_CANONICAL_TARGET
 
+# Override cross_compiling and ac_tool_prefix variables since the C toolchain is
+# used to generate target code when building a cross compiler
+AS_IF([test x"$build" = x"$target"],
+  [cross_compiling=no],
+  [cross_compiling=yes])
+AS_IF([test -n "$target_alias"],
+  [ac_tool_prefix=$target_alias-])
+
 # Ensure that AC_CONFIG_LINKS will either create symlinks which are compatible
 # with native Windows (i.e. NTFS symlinks, not WSL or Cygwin-emulated ones) or
 # use its fallback mechanisms. Native Windows versions of ocamlc/ocamlopt cannot
@@ -594,12 +602,22 @@ AC_CHECK_TOOLS([LD],[ld link])
 # Also, it has been observed that, on some platforms (e.g. msvc) LT_INIT
 # alters the CFLAGS variable, so we save its value before calling the macro
 # and restore it after the call
+pushdef([host], target)dnl
+pushdef([host_alias], target_alias)dnl
+pushdef([host_cpu], target_cpu)dnl
+pushdef([host_vendor], target_vendor)dnl
+pushdef([host_os], target_os)dnl
 old_host_os=$host_os
 AS_IF([test x"$host_os" = "xwindows"],[host_os=mingw])
 saved_CFLAGS="$CFLAGS"
 LT_INIT
 CFLAGS="$saved_CFLAGS"
 host_os=$old_host_os
+popdef([host_os])dnl
+popdef([host_vendor])dnl
+popdef([host_cpu])dnl
+popdef([host_alias])dnl
+popdef([host])dnl
 
 AS_CASE([$host],
   [sparc-sun-solaris*],
-- 
2.45.2

